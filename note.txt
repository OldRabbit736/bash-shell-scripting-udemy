pwd: present working directory

ls -l
ls -a
ls -la

xdg-open

touch: make files
example: touch abc.txt

mkdir: make directories

mv: change name of a file
example: mv aaa.txt bbb.txt (aaa.txt changed to bbb.txt)

mv: move a file to a directory
examples:
- mv bbb.txt some-folder (bbb.txt moved into some-folder)
- mv some-folder/bbb.txt . (bbb.txt in some-folder moved to the working directory)

cp: copy!
examples:
- cp bbb.txt ccc.txt (copy bbb.txt to ccc.txt)
- cp bbb.txt a-folder/ (copy bbb.txt into a-folder)

rm: remove!
examples:
- rm b.html (remove b.html)
- rm a-folder/* (remove everything in a-folder)

file: show info about files
examples:
- file bbb.txt a.html (show info of files)
- file *.txt (show info of the files with extension .txt)

-r : recursively
examples:
- cp -r a-folder a2-folder
- rm -r a2-folder
- mv a-folder a2-folder <-- exception (doesn't need -r)
- ls -R .

> : redirect
examples:
- echo "hello there" > newtext.txt (replace contents of the file with the line)
- ls -l > newtext.txt (replace contents of the file with the list info)

>> : append
examples:
- echo "hello there" >> newtext.txt (append the line to the contents of the file)

cat : concatenate
examples:
- cat file (show the contents of the file on the screen)
- cat file1 file2 (show the contents of the file1 and file2 contatenated)
- cat file1 file2 > file3 (replace contents of the file with the contatenated contents from file1 and file2)

| : pipe (commaind1 | commaind2 | ...)
examples:
- ls a-folder | less
- ls a-folder | tail -2 (show the last 2 lines from the output of ls a-folder command)
- ls a-folder | tail -3 | sort > myfile.txt

tail
examples:
- tail -2 a.txt (show the last 2 liens of a.txt file)

find : find files and folders
examples:
- find .
- find myfolder (find all the files and folders in the folder)
- find myfolder -name aaa.txt (find the files in the folder)
- find myfolder -type f (find all the files in the folder)
- find myfolder -type d (find all the folders(directories) in the folder)

grep : find lines
examples:
- grep abc a.txt (find lines contains abc in a.txt file)
- grep -i abc b.txt (find lines case-insensitively)
- ls -l | grep .txt
- ls -l | grep -v .txt (the rest lines (everything else))

awk :
examples:
- awk '{print}' bbb.txt (all the content)
- awk '{print $1}' bbb.txt (the first column)
- awk '{print $1, $3}' bbb.txt (the first and third column)
- awk '{print $1 $3}' bbb.txt (the first and third column concatenated)
- awk '{print $0}' bbb.txt (all the content)
- awk '{print $NF}' bbb.txt (the last column)
- awk '{print $(NF-1)}' bbb.txt (the first column from the last column)
- awk 'NR==1 {print }' bbb.txt (the first row)
- awk 'NR==1,NR==5 {print }' bbb.txt (the first to fifth rows)
- awk 'NR==1;NR==5 {print }' bbb.txt (the first and the fifth rows)
- awk 'NR==1 {print $1}' bbb.txt (the first column in the first row)
- awk 'NR==1;NR==4 {print $2,$3}' bbb.txt (the second and third columns in the first and fourth rows)
- awk -F ";" '{print $1}' wow.txt (the first column with the separator ';')
- awk '/usa/ {print}' wow2.txt (the rows containing 'usa')
- awk '/usa|spain/ {print}' wow2.txt (the rows containing 'usa' or 'spain')
- awk '/i/ {print}' wow2.txt (the rows containing 'i')
- awk '$2~/i/ {print}' wow2.txt (the rows containing 'i' in the second column)
- awk '$2~/i/ {print $2,$4}' wow2.txt (the second and fourth columns in the rows containing 'i' in the second column)
- awk '$4==$5 {print }' wow2.txt (the rows of which the fourth and fifth columns are the same)
- awk '{print length($1)}' wow2.txt (the length(the number of characters) of the first column)
- awk '{print $1, length($1)}' wow2.txt (the first column and the length(the number of characters) of the first column)
- awk 'NR==2 {print $1, length($1), $4}' wow2.txt


sudo
examples:
- sudo touch filename (make file as superuser)
- sudo bash (open bash as superuser) --> exit (return to user)

whoami: show user

chown : change ownership
examples:
- sudo chown username filename (change ownership of filename to username)
- sudo touch abc.txt --> sudo chown oldrabbit abc.txt (abc.txt owner changed to oldrabbit)
- sudo chown -R oldrabbit foldername (change ownership of foldername and files and folders inside it to oldrabbit)

chgrp : change group
examples:
- sudo chgrp groupname filename (change groupname of filename to groupname)
- sudo touch abc.txt --> sudo chgrp oldrabbit abc.txt (abc.txt owner changed to oldrabbit)
- sudo chgrp -R oldrabbit foldername (change group of foldername and files and folders inside it to oldrabbit)

chmod (reference)(operator)(modes) : change permission
reference:
- u: user
- g: group
- o: other
- a: all
operator:
- +: add
- -: remove
- =: set
modes:
- r: read
- w: write
- x: execute
- -: no permission
examples:
- chmod u=wrx file.txt (user permission for file.txt sets to w, r, x)
- chmod ug+rw file.txt (user and group gets r, x permissions)
- chmod u=r,g+x file.txt (user permission set to r, guest gets x permission) (no spaces between u=r, and g+x)
- chmod +x file.txt (all the references get x permission)
- chmod -x file.txt (all the references lose x permission)

variables
set:
- myvar=123
accessing:
- $myvar or ${myvar}
unset:
- g=something --> unset g
examples:
- myvar=123 (myvar set to 123) --> echo "the value of variable is $myvar" (show "the value of my variable is 123" on the screen)
- myvar=123 --> c=cats --> echo "I have $myvar $c" ("I have 123 cats" on the screen)
- g=something --> unset g --> echo "value: $g" ("value: " on the screen)
- var=hey --> echo ${var}yo! (heyyo! on the screen)
- mycommand=ls --> $mycommand (equivalent to ls command execution)
- mycommand2=echo --> $mycommand2 abcdef (shows abcdef on the screen)

environment variables
examples:
- $USER
- $HOME
- $PATH

$(command) or `command`: command substitution-expansion
(recommaned is $())
examples:
- d=$(ls) (ls outputs assigned to variable d)
- d=$(ls) --> echo $d
- p=$(pwd) --> cd --> cd $p or ls $p ...

login script files: (located in the user folder(~ = /home/user))
- .bashrc (on linux for non-login shells)
- .profile (on linux for login shells)
- .bash_profile
- .login
examples:
- ls -a ~ (show filse in the user folder and one of those script files is shown)
to apply login script, exit and restart terminal or type in "source"

read:
- read myvalue --> type in some values... (values assigned to myvalue)
- read -p "type your age " age
- read -s password
- read -sp "type password: " pass